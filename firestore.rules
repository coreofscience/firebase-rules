rules_version = '2';
service cloud.firestore {
  function signedInAndMatchBetweenUIDAndUserId(userId) {
    return request.auth != null && request.auth.uid == userId;
  }
  function validateThePlanWithTheTreeType() {
    let plan = request.auth.token.plan;
    let treeType = request.resource.data.planId;
    return plan == treeType
  }
  match /databases/{database}/documents {
    match /emails/{email} {
      allow write: if request.resource.data.email.matches(".*@.*");
      allow read: if false;
    }
    match /results/{document=**} {
      allow read: if true;
    }
    match /trees/{treeId} {
      allow read, write: if true
    }
    match /users/{userId}/trees/{treeId} {
      allow read, update, delete: if signedInAndMatchBetweenUIDAndUserId(userId);
      allow create: if signedInAndMatchBetweenUIDAndUserId(userId) && validateThePlanWithTheTreeType();
    }
    match /users/{userId}/basicAnalysis/{treeId} {
      allow read, update, delete: if signedInAndMatchBetweenUIDAndUserId(userId);
      allow create: if signedInAndMatchBetweenUIDAndUserId(userId) && request.auth.token.plan == "basic" && request.resource.data.planId == "basic";
    }
    match /users/{userId}/proAnalysis/{treeId} {
      allow read, update, delete: if signedInAndMatchBetweenUIDAndUserId(userId);
      allow create: if signedInAndMatchBetweenUIDAndUserId(userId) && request.auth.token.plan == "pro" && request.resource.data.planId == "pro";
    }
    match /{document=**} {
      allow read, write: if false
    }
  }
}
